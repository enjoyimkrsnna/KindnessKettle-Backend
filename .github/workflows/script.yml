name: Build, Deploy, and Run on EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Build JAR
        run: |
          cd "${{ github.workspace }}"  # Use the repository root as the project directory
          mvn clean package

      - name: Debug - List files in target directory on runner
        run: ls -l target

      - name: Upload JAR as artifact
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: bddAtcProject-0.0.1-SNAPSHOT
          path: target

  deploy_and_run:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: bddAtcProject-0.0.1-SNAPSHOT
          path: target

      - name: Debug - List files in target directory on runner
        run: ls -l target

      - name: Remove previous JAR on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/
            rm -f bddAtcProject-0.0.1-SNAPSHOT.jar

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: 'target/bddAtcProject-0.0.1-SNAPSHOT.jar'
          target: '/home/ec2-user/'

      - name: Debug - List files on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/
            ls -l

      - name: Check JAR file on EC2
        run: |
          echo "Checking if JAR file exists on EC2..."
          ssh -o StrictHostKeyChecking=no -i <(echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}") ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "test -e /home/ec2-user/bddAtcProject-0.0.1-SNAPSHOT.jar"

      - name: Run Spring Boot on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/
            nohup java -jar bddAtcProject-0.0.1-SNAPSHOT.jar > output.log 2>&1 &
